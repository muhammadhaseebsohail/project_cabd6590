Sure, here's how you would convert the above styled-components code to use CSS modules:

1. Component code:

```jsx
import React from "react";
import { useForm } from "react-hook-form";
import PropTypes from "prop-types";
import styles from './ForgetPassword.module.css';

const ForgetPassword = ({ onSubmit }) => {
  const { register, handleSubmit, errors } = useForm();

  return (
    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>
      <input
        className={styles.input}
        name="email"
        placeholder="Email"
        ref={register({ required: true, pattern: /^\S+@\S+$/i })}
      />
      {errors.email && <div className={styles.error}>Please enter a valid email</div>}

      <button type="submit" className={styles.button}>Reset Password</button>
    </form>
  );
};

ForgetPassword.propTypes = {
  onSubmit: PropTypes.func.isRequired,
};

export default ForgetPassword;
```

2. CSS/Styling (ForgetPassword.module.css):

```css
.form {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 400px;
}

.input {
  margin-bottom: 20px;
  padding: 10px;
  border: 1px solid #ccc;
}

.button {
  padding: 10px;
  color: #fff;
  background-color: #007bff;
  border: none;
  cursor: pointer;
}

.error {
  color: #ff0000;
  margin-bottom: 10px;
}
```

3. PropTypes:
```jsx
ForgetPassword.propTypes = {
  onSubmit: PropTypes.func.isRequired,
};
```

4. Export statement:
```jsx
export default ForgetPassword;
```
This component is functionally identical to the original, but now uses CSS modules for styling.